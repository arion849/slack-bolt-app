name: Deploy Slack Bolt App to EKS

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Get latest tag and bump version
      id: version
      run: |
        git fetch --tags
        latest_tag=$(git tag --sort=-v:refname | grep -E '^v?[0-9]+\.[0-9]+$' | head -n 1)
        if [[ -z "$latest_tag" ]]; then
          new_version="1.0"
        else
          base=${latest_tag#v}
          major=$(echo $base | cut -d. -f1)
          minor=$(echo $base | cut -d. -f2)
          new_minor=$((minor + 1))
          new_version="${major}.${new_minor}"
        fi
        echo "version=$new_version" >> $GITHUB_OUTPUT
        echo "Image version: $new_version"

    - name: Create and push Git tag
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag ${{ steps.version.outputs.version }}
        git remote set-url origin https://x-access-token:${GH_PAT}@github.com/arion849/slack-bolt-app.git
        git push origin ${{ steps.version.outputs.version }}

    - name: Log in to JFrog Docker Registry
      uses: docker/login-action@v2
      with:
        registry: trialymloms.jfrog.io
        username: ${{ secrets.JFROG_USERNAME }}
        password: ${{ secrets.JFROG_API_KEY }}

    - name: Build and push Docker image to JFrog
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          trialymloms.jfrog.io/bot-docker/slack-bolt-app:latest
          trialymloms.jfrog.io/bot-docker/slack-bolt-app:${{ steps.version.outputs.version }}
        cache-from: type=registry,ref=trialymloms.jfrog.io/bot-docker/slack-bolt-app:latest

    - name: Update ArgoCD manifest with new tag
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git clone https://x-access-token:${GH_PAT}@github.com/arion849/ArgoCD.git
        cd ArgoCD
        sed -i "s|trialymloms.jfrog.io/bot-docker/slack-bolt-app:.*|trialymloms.jfrog.io/bot-docker/slack-bolt-app:${{ steps.version.outputs.version }}|g" k8s/deployment.yaml
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add k8s/deployment.yaml
        git commit  -m "Update deployment to image tag ${{ steps.version.outputs.version }}"
        git push origin main

 #   - name: Configure AWS credentials
  #    uses: aws-actions/configure-aws-credentials@v2
   #   with:
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
     #   aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #  aws-region: us-east-1
