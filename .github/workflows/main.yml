name: Deploy Slack Bolt App to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to JFrog Docker Registry
      uses: docker/login-action@v2
      with:
        registry: trialymloms.jfrog.io
        username: ${{ secrets.JFROG_USERNAME }}
        password: ${{ secrets.JFROG_API_KEY }}

    - name: Build and push Docker image to JFrog
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: trialymloms.jfrog.io/bot-docker/slack-bolt-app:latest
        cache-from: type=registry,ref=trialymloms.jfrog.io/bot-docker/slack-bolt-app:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Sync Argo CD app
      run: |
        argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure --server-name ${{ secrets.MY_ARGOCD_SERVER_NAME }}
        argocd app sync slack-bolt-app
